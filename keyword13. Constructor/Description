 1) Constructor
    객체의 생성과 동시에 멤버변수를 초기화 할 수 있다.
    반환형이 없다.

 2) Member Initializer
    멤버변수가 클래스인 경우 멤버변수를 초기화 할 수 있는 방법이 필요한데, 이를 Member Initializer라고 한다.
    해당 Class의 생성자에서 멤버변수 클래스를 initialize할 수 있는 keyword이다.
    ex) Rectangle::Rectangle(....)
                   : upLeft(x1, y1), lowRight(x2, y2)   // <-- 이 부분이 member initialize

    멤버변수가 객체가 아닌 경우에도 사용이 가능하다.
    ex)
         class SoSimple
         {
            private : 
               int num1, num2;
            public : 
               SoSimple(int n1, int n2) : num1(n1)
               {
                  num2 = n2;
               }

            . . .

         };
    생성자에서 초기화 하는 것 보다 member initilaizer를 이용하면 성능상의 이점이 있고, 초기화의 대상을 명확히 인식할 수 있어 주로 사용된다.
    생성자를 사용하면 변수의 선언 -> 초기화 순으로 진행 되나 member initializer를 사용하면 선언과 동시에 초기화가 일어난다.
    선언과 동시에 초기화가 일어나는 const 변수같은 경우 initilaizer를 이용한 초기화가 가능하다.
    또한, 선언과 동시에 초기화가 일어나는 참조자도 사용이 가능하므로 멤버변수에 참조자 선언이 가능해진다.

 2) Default Constructor
    Constructor를 정의하지 않아도 생성자는 반드시 호출 된다.
    이를 Default Constructor라고 한다.
    생성자가 1개라도 정의 되어 있으면 Default Constructor는 존재하지 않는다.

 3) Private Constructor
    객체 내부에서 Constructor를 수행하는 경우 private으로 생성자를 선언해도 된다.