&연산자는 이미 선언된 변수 앞에 오면 주소값이 되지만, 새로 선언하는 변수 앞에 오면 참조자가 된다.
동일한 메모리 공간에 2가지 이름이 선언되는 것이다.

int *ptr = &num1;   // num1의 주소값을 ptr변수에 저장
int &num2 = num1;   // num1에 대한 참조자 num2

참조자에 대한 참조자 선언이 가능하다.
참조자 수에 제한이 없다.
참조자는 변수에 대해서만 선언 가능하다.
참조자는 선언과 동시에 참조 대상을 선언해야 한다.
NULL 초기화는 불가능하다.
참조자를 통한 Call-By-Reference 함수 작성이 가능하다.

const 참조자가 가능하다.
int &ref = 20; 은 안되지만 const int &ref = 20; 은 가능하다.

(X)
const int num = 20;
int &ref = num;

(O)
const int num = 20;
const int &ref = num;

이게 가능한 이유는 상수를 참조자 형태의 argument로 넘길 때
해당 상수 전달을 위해 변수 선언하는 것이 불합리하기 떄문이다.
 